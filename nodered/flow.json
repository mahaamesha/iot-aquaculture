[
    {
        "id": "3244455b14766eae",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "Test receive msg from MQTT",
        "env": []
    },
    {
        "id": "9ed50aa2a15971b2",
        "type": "subflow",
        "name": "sub1",
        "info": "Send data from sensors with MQTT, then save it into DB.",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3dff45646994f545",
        "type": "subflow",
        "name": "sub2",
        "info": "Take picture, measure fish length, save to DB.",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 200,
                "wires": [
                    {
                        "id": "deea5816191a2109"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1d413aa81ba2085f",
        "type": "mqtt-broker",
        "name": "HiveMQ Cloud",
        "broker": "fb39fa06a52049ecac3a88801077b1b7.s2.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "35299a07402c88ad",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "766bd7a5386acf81",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "aquaculture",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "8b9eaf51e949e6ef",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "mytest",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "f68e27fb4ad9e515",
        "type": "comment",
        "z": "9ed50aa2a15971b2",
        "name": "MQTT and InfluxDB",
        "info": "Test receive msg from MQTT.\nThen upload it to InfluxDB.",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "5f9fc934a58d1b2f",
        "type": "mqtt in",
        "z": "9ed50aa2a15971b2",
        "name": "water_quality",
        "topic": "ourSensorOut/water_quality",
        "qos": "2",
        "datatype": "auto",
        "broker": "35299a07402c88ad",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 180,
        "wires": [
            [
                "c281074e085c9a38",
                "509d9c450cd6eecb",
                "02be9be7394992eb",
                "043d152382f13913"
            ]
        ]
    },
    {
        "id": "741fee405b03dc7e",
        "type": "influxdb out",
        "z": "9ed50aa2a15971b2",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "c281074e085c9a38",
        "type": "function",
        "z": "9ed50aa2a15971b2",
        "name": "get_temperature()",
        "func": "var data = msg.payload;\ndata = data.split(\",\");\n\nvar temp = parseFloat(data[0]);\n\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 220,
        "wires": [
            [
                "741fee405b03dc7e"
            ]
        ]
    },
    {
        "id": "509d9c450cd6eecb",
        "type": "function",
        "z": "9ed50aa2a15971b2",
        "name": "get_turbidity()",
        "func": "var data = msg.payload;\ndata = data.split(\",\");\n\nvar turbidity = parseFloat(data[1]);\n\nmsg.payload = turbidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 260,
        "wires": [
            [
                "2f0eadc164c21d64"
            ]
        ]
    },
    {
        "id": "2f0eadc164c21d64",
        "type": "influxdb out",
        "z": "9ed50aa2a15971b2",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "turbidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "02be9be7394992eb",
        "type": "debug",
        "z": "9ed50aa2a15971b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 180,
        "wires": []
    },
    {
        "id": "043d152382f13913",
        "type": "function",
        "z": "9ed50aa2a15971b2",
        "name": "get_pH()",
        "func": "var data = msg.payload;\ndata = data.split(\",\");\n\nvar pH = parseFloat(data[2]);\n\nmsg.payload = pH;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 300,
        "wires": [
            [
                "df2661a17bf3daef"
            ]
        ]
    },
    {
        "id": "df2661a17bf3daef",
        "type": "influxdb out",
        "z": "9ed50aa2a15971b2",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "pH",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "7d0256bec913f8f1",
        "type": "comment",
        "z": "3dff45646994f545",
        "name": "Measure Fish Length",
        "info": "Call run.py from folder project (fish-length-opencv)",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "deea5816191a2109",
        "type": "pythonshell in",
        "z": "3dff45646994f545",
        "name": "camera.py",
        "pyfile": "/home/ma-pi/_myProjects/iot-aquaculture/src/camera.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "dfb8c02d1ed45fa1",
                "43c09270b34507c8"
            ]
        ]
    },
    {
        "id": "cccd0bd6399e4dc6",
        "type": "function",
        "z": "3dff45646994f545",
        "name": "get_avg_fishlength()",
        "func": "var data = msg.payload;\n\nvar avg_fishlength = data.result['avg_fishlength'];\n\nmsg.payload = avg_fishlength;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 600,
        "wires": [
            [
                "10e98cba05b274e1"
            ]
        ]
    },
    {
        "id": "334d1844de15fb8d",
        "type": "json",
        "z": "3dff45646994f545",
        "name": "result object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 110,
        "y": 520,
        "wires": [
            [
                "cccd0bd6399e4dc6",
                "40f23208c8e08fc2",
                "38fed4db5483b4c5"
            ]
        ]
    },
    {
        "id": "9a186e15f0eeeedf",
        "type": "file in",
        "z": "3dff45646994f545",
        "name": "read result.json",
        "filename": "/home/ma-pi/_myProjects/fish-length-opencv/tmp/result.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 240,
        "y": 460,
        "wires": [
            [
                "334d1844de15fb8d",
                "eb504c4ae0eb5e39"
            ]
        ]
    },
    {
        "id": "eb504c4ae0eb5e39",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 460,
        "wires": []
    },
    {
        "id": "40f23208c8e08fc2",
        "type": "function",
        "z": "3dff45646994f545",
        "name": "get_num_fish()",
        "func": "var data = msg.payload;\n\nvar num_fish = data.result['num_fish'];\n\nmsg.payload = num_fish;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 640,
        "wires": [
            [
                "5f1b0437dbf06992"
            ]
        ]
    },
    {
        "id": "38fed4db5483b4c5",
        "type": "function",
        "z": "3dff45646994f545",
        "name": "get_datetime()",
        "func": "var data = msg.payload;\n\nvar datetime = data.result['datetime'];\n\nmsg.payload = datetime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 680,
        "wires": [
            [
                "49d968dbaf211fa3"
            ]
        ]
    },
    {
        "id": "10e98cba05b274e1",
        "type": "influxdb out",
        "z": "3dff45646994f545",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "fishlength",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 470,
        "y": 600,
        "wires": []
    },
    {
        "id": "5f1b0437dbf06992",
        "type": "influxdb out",
        "z": "3dff45646994f545",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "num_fish",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 470,
        "y": 640,
        "wires": []
    },
    {
        "id": "49d968dbaf211fa3",
        "type": "influxdb out",
        "z": "3dff45646994f545",
        "influxdb": "766bd7a5386acf81",
        "name": "",
        "measurement": "datetime",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "dfb8c02d1ed45fa1",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "a24e15c512ea160f",
        "type": "comment",
        "z": "3dff45646994f545",
        "name": "Upload Measurement Result to DB",
        "info": "",
        "x": 180,
        "y": 400,
        "wires": []
    },
    {
        "id": "1350a9f8fadfe158",
        "type": "comment",
        "z": "3dff45646994f545",
        "name": "Send Email contain Warer Quality and Final Image",
        "info": "",
        "x": 230,
        "y": 820,
        "wires": []
    },
    {
        "id": "1219660d7b4150c0",
        "type": "pythonshell in",
        "z": "3dff45646994f545",
        "name": "send_email.py",
        "pyfile": "/home/ma-pi/_myProjects/iot-aquaculture/src/send_email/send_email.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 260,
        "y": 880,
        "wires": [
            [
                "80841e52bbc623b5"
            ]
        ]
    },
    {
        "id": "80841e52bbc623b5",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 880,
        "wires": []
    },
    {
        "id": "484298b326e6d1f0",
        "type": "link out",
        "z": "3dff45646994f545",
        "name": "",
        "mode": "link",
        "links": [
            "09f5f6e33e9a0ed4",
            "1b2e156b9452612b"
        ],
        "x": 475,
        "y": 280,
        "wires": []
    },
    {
        "id": "09f5f6e33e9a0ed4",
        "type": "link in",
        "z": "3dff45646994f545",
        "name": "",
        "links": [
            "484298b326e6d1f0"
        ],
        "x": 95,
        "y": 880,
        "wires": [
            [
                "1219660d7b4150c0"
            ]
        ]
    },
    {
        "id": "1b2e156b9452612b",
        "type": "link in",
        "z": "3dff45646994f545",
        "name": "",
        "links": [
            "484298b326e6d1f0"
        ],
        "x": 85,
        "y": 460,
        "wires": [
            [
                "9a186e15f0eeeedf"
            ]
        ]
    },
    {
        "id": "a42f0f89d479b51e",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "return",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 240,
        "wires": []
    },
    {
        "id": "43c09270b34507c8",
        "type": "exec",
        "z": "3dff45646994f545",
        "command": "cd ./_myProjects/fish-length-opencv/ && python run.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "run.py",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "a01764648dc16090"
            ],
            [
                "67c083b075c4f048"
            ],
            [
                "a42f0f89d479b51e",
                "484298b326e6d1f0"
            ]
        ]
    },
    {
        "id": "a01764648dc16090",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "stdout",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 160,
        "wires": []
    },
    {
        "id": "67c083b075c4f048",
        "type": "debug",
        "z": "3dff45646994f545",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 200,
        "wires": []
    },
    {
        "id": "d52b3abffc66bae0",
        "type": "subflow:9ed50aa2a15971b2",
        "z": "3244455b14766eae",
        "name": "",
        "x": 110,
        "y": 200,
        "wires": []
    },
    {
        "id": "b6b2d8c30335807d",
        "type": "comment",
        "z": "3244455b14766eae",
        "name": "MQTT and InfluxDB",
        "info": "Test receive msg from MQTT.\nThen upload it to InfluxDB.",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "2639061fc0ec71d3",
        "type": "comment",
        "z": "3244455b14766eae",
        "name": "Measure Fish Length",
        "info": "Call run.py from folder project (fish-length-opencv)\n\nTrigger in certain time (ex: every 10.00 WIB)",
        "x": 160,
        "y": 320,
        "wires": []
    },
    {
        "id": "4ad90681186e79f0",
        "type": "subflow:3dff45646994f545",
        "z": "3244455b14766eae",
        "name": "",
        "x": 350,
        "y": 360,
        "wires": []
    },
    {
        "id": "0c3a0a681bda74d0",
        "type": "inject",
        "z": "3244455b14766eae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "4ad90681186e79f0",
                "587694592742128c"
            ]
        ]
    },
    {
        "id": "587694592742128c",
        "type": "debug",
        "z": "3244455b14766eae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 400,
        "wires": []
    }
]